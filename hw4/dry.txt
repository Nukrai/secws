
Module:
	split into 3 code files and 3 headers
	hw4secws.c -
		main file. containes the setup, registration code for the module and drivers.
		- not very interesting
	netfilter.c -
		file for hook functions (pre routing/local out)

		pre routing hook func first checks the packet protocol and fills the details accordingly (and if it's TCP, makes sure the packet is not XMAS).
		Then is searches for a rule (if ack == 0) or connection (if ack == 1) and returns its action accordingly. 
		If not - drops. then it logs its action (if it searched in the rule table)) using the log utils. if needed - it calls enforce_proxy to do proxy changes.
		
		local out hook - mainly checking for specific cases like extracting the proxy port, handing RST, last acks ... also does call enforce_proxy for proxy stuff
		
		enforce proxy - changes fields in packet to be MITM

	conn.c - 
		file for connection table related operations.
		
		ftp read/modify - handles port 20 speacial case to allow connection
			
		proxy match/is matching - checks conn to a packet with more and less sensativity to the proxy port 

		get/update proxy port - quite self explainatory

		tcp_enfore - enforces TCP state table (!)

		conn_str - generates the connection string to be printed
		
		conn_display - 'prints' conn str output to the file

		remove/add new connetion - self explainatory. i use dynamic array (Thanks for the course in data structures mavnat).

	ruler.c -
		file for rule-table oriented operations / rule table utils.
		main functions: 
		search_rule - finds a rule index in the table or returns -1 if there is none. 
		ruler_modify - loads from its file a new rule table
		ruler_display - represents the current rule table 
		create_rule - creates a new rule to be added to the table
	logging.c -
		file for logging related operations / logging utils.
		main functions:
		log_reset - log device reset/write function - clears the log
		create_log - create a new log piece to be added to the log
		log_str - creates a string repr. of the log
		log_read - formats the log out to the reader
		add_log	- adds a new entry to the log after invoking log_search to see that it's a new entry
		search_log - searches if an identical log is present. if yes, adds its counter.

User program:
	written in python 3.
	main funcions: 
	parse - takes the rules file format and returns the easy to parse in kernel format of the rules. returns empty string of rules file is not in format
	unparse - takes the kernel easy format and generates rules file format
	unlog - takes the lernel easy log format to the unified, easy to read format given
	ip2int - transfers string ip (such as "127.0.0.1/32") to its numeric form (including the mask)	
	int2ip - does the opposite	
	utc_to_local - fixes timezone related problems

